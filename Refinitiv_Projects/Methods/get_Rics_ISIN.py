import refinitiv.data as rd
from refinitiv.data.content import symbol_conversion
import os

os.environ["RD_LIB_CONFIG_PATH"] = "config.json"
rd.open_session(config_name="config.json")
symbols=[
    "SA14TG012N13", "AEA002401015", "SA0007879113", "SA15CGS10H12", "SA0007879121",
    "AEE01195A234", "SA13L050IE10", "SA0007879543", "SA123GA0ITH7", "KW0EQ0100085",
    "AEE000401019", "AEN000101016", "QA0006929895", "AED001801011", "SA1510P1UMH1",
    "AEE000801010", "KW0EQ0100010", "SA0007879089", "SA122050HV19", "SA0007879048",
    "SA0007879550", "AEE01072B225", "QA000A0KD6K3", "AEE000301011", "SA15GG53GHH3",
    "AEA007301012", "AEA000201011", "SA000A0ETHT1", "SA0007879139", "AEA006501018",
    "AEA002001013", "AEA000801018", "SA0007879105", "SA000A0D9HK3", "SA0007879782",
    "AEA006101017", "QA0006929853", "AED000201015", "MA0000012445", "SA1210540914",
    "SA15CIBJGH12", "SA000A0DM9P2", "AEE001901017", "QA0007227737", "MA0000011488",
    "SA000A0MR864", "KW0EQ0102065", "AEE01268A239", "SA15DHKGHBH4", "AEA004601018",
    "SA12C051UH11", "AEE000701012", "AEE01135A222", "SA31RG522S19", "AEE01110S227",
    "SA0007879162", "AEM001001019", "KW0EQ0601058", "SA15M1HH2NH5", "SA000A0KFKK0",
    "QA000A0KD6L1", "SA000A0DPSH3", "AEF000901015", "QA000VSUG130", "QA000A0M8VM3",
    "MA0000011884", "AEN000401010", "SA15T1L22JH8", "QA000A0NE8B4", "SA000A0HNF36",
    "SA55SG6H5716", "QA000B982PM1", "SA0007870054", "SA000A0JK5M3", "OM0000002796",
    "SA0007879659", "MA0000012320", "BH0006000044", "EGS60121C018", "SA15HG521213",
    "QA0007227752", "QA0006929812", "SA0007879063", "SA000A0B89Q3", "SA15L0N10HH3",
    "SA0007879055", "QA0006929879", "SA135G51UI10", "SA000A0BLA62", "AEE01134E227",
    "MA0000012437", "AEE01119B224", "SA12A0540J14", "QA0001200771", "AEE01200P230",
    "JO1302311013", "JO4101811019", "SA15LGLI0N19", "AEE01081T004", "SA11U0S23612",
    "SA11RGL0IU14", "SA15L1I156H7", "SA000A0MQCJ2", "KW0EQ0400725", "AEA003001012",
    "MA0000012205", "BH0005508773", "SA0007879790", "QA0007227695", "SA120GAH5617",
    "QA000A0KD6J5", "KW0EQ0100028", "SA14QG523GH3", "SA000A0HNGZ6", "SA1230K1UGH7",
    "SA000A0EAXM3", "AED000901010", "SA15D1I1VJH7", "SA121053DR18", "MA0000011058",
    "SA14K0Q0SJ16", "SA1330R2TQ16", "SA154HG210H6", "SA000A0LE310", "SA13R051UVH9",
    "EGS691S1C011", "AEA002801016", "AEN000501017", "GB00BH3VJ782", "SA15QGU1UNH6",
    "SA0007879568", "MA0000010506", "KW0EQ0601041", "AED000601016", "AEZ000101010",
    "BH0004659916", "SA13J051UJH4", "SA139051UIH0", "SA0007879170", "SA132GSGS910",
    "BH0060713458", "SA000A0KDVM8", "SA141H01UKH9", "KW0EQ0100044", "SA0007870047",
    "SA15H14I11H6", "KW0EQ0100077", "AEE01198A238", "SA12U0RHUHH8", "QA000M2522L9",
    "MA0000012312", "OM0000003026", "AEA001001014", "SA15DGU21117", "AES000201013",
    "SA0007879402", "AEE01122B228", "QA000A0Q5NE9", "OM0000003398", "SA14L09I31H9",
    "KW0EQ0200653", "QA0006UVF886", "SA0007879451", "EGS39061C014", "SA0007879469",
    "MA0000012247", "EGS38191C010", "KW0EQB010084", "SA13LG50KBH9", "AER000401011",
    "SA0007879196", "SA15ED94KR18", "KW0EQ0500813", "SA1591410GH0", "AEG000601019",
    "OM0000009072", "SA000A0MWH44", "EGS3G0Z1C014", "AEA007501017", "MA0000010928",
    "BH000A0J2481", "QA000A0Q6LH4", "SA12IG523B16", "AEA003201018", "SA0007879501",
    "MA0000010951", "SA15HG50KL10", "SA14PGMJGG18", "SA0007879493", "SA15GH80KKH0",
    "MA0000011801", "SA15SH122J13", "SA15LISJGI11", "AED000701014", "KW0EQ0607022",
    "AEA007701013", "KW0EQB010944", "KW0EQ0601694", "MA0000012262", "MA0000011512",
    "SA15QGU13LH9", "SA15J1S23H17", "SA0007870070", "SA0007879188", "OM0000002549",
    "QA0006929770", "SA0007879519", "EGS48031C016", "AEA001901015", "MA0000011454",
    "OM0000001483", "KW0EQ0500979", "QA000A0KD6M9", "SA0007879683", "EGS37091C013",
    "JO1100111011", "TN0001100254", "SA128G53E019", "BH000A0CAQK6", "TN0001800457",
    "SA15M1PI1G19", "SA12B050KK11", "KW0EQ0609648", "AEE01136T220", "MA0000012528",
    "OM0000002200", "AEA002301017", "SA000A0MJ2H8", "EGS743O1C013", "SA13Q050IP16",
    "MA0000012585", "AED001001018", "MA0000011710", "EGS69081C023", "KW0EQ0400642",
    "KW0EQ0100069", "SA0007879360", "KW0EQ0602452", "KW0EQ0500862", "AEA000701010",
    "SA11RGEI3218", "SA14QH2GSJH8", "SA0007879915", "SA000A0JK4U9", "MA0000010811",
    "SA0007879154", "SA000A0LEF64", "KW0EQ0401632", "SA0007879527", "SA15BH1H3KH5",
    "SA159GK22IH4", "SA0007879345", "KW0EQB010837", "MA0000012031", "MA0000010365",
    "SA13DG50KB18", "SA000A0MLUD8", "JO1101711017", "SA134G51ETH6", "QA000A0YDSW8",
    "EGS3C251C013", "AER000301013", "JO3120611012", "SA0007879246", "AEA005901011",
    "QA000T98R9J4", "AER000601016", "SA0007870062", "AEE01078I227", "SA13U0923G19",
    "SA1210540419", "BMG4809J1062", "QA000PK2KD10", "JO4204111010", "KW0EQ0400618",
    "TN0001600154", "KW0EQ0200281", "KW0EQ0602221", "OM0000001533", "SA11TH0I3111",
    "SA14GG523Q50", "SA15SGSI3HH9", "SA15JHPITV18", "OM0000008934", "EGS95001C011",
    "MA0000012460", "OM0000004420", "KW0EQ0400634", "KW0EQ0504799", "OM0000001707",
    "SA0007879808", "SA12GGPITP13", "KW0EQ0601124", "MA0000011819", "SA14TGL1UM17",
    "EGS60041C018", "SA1420I0KC11", "QA000A0KD6H9", "QA000A0NA0T7", "TN0005700018",
    "JO1100711018", "AEU000101011", "KW0EQ0200331", "QA000A0NBGK5", "OM0000003968",
    "SA0007879261", "KW0EQ0500888", "SA000A0MLUH9", "SA0007879378", "SA15QH00SKH0",
    "SA1230A2TOH3", "SA136051EU12", "SA12A0540T12", "EGS69101C011", "SA132051ET14",
    "SA15DGH1VOH4", "EGS745L1C014", "TN0002200053", "SA12I0OGIV12", "SA15HG50IFH7",
    "SA14GG523S58", "SA14I0523TL9", "SA15GGQ1UN19", "SA0007879626", "SA0007870104",
    "MA0000012619", "QA000PLE37B1", "KW0EQ0608889", "TN0003400058", "SA15JH2H3L19",
    "SA0007879329", "SA13Q051UK14", "SA000A0LF1T0", "KW0EQ0200786", "SA11TGN15119",
    "SA145G523L57", "SA153G80IF11", "SA13AG53T618", "SA0007879147", "SA000A0MLUG1",
    "SA000A0LB2R6", "SA0007879337", "SA12JG51G9H8", "SA0007879410", "MA0000010019",
    "SA12HG541M13", "AEA001201010", "OM0000001749", "QA0006929754", "SA11T053VL18",
    "SA0007879535", "SA14C0PHEVH7", "SA0007879832", "SA13HG51UJ13", "SA12S051ESH9",
    "SA14E0523P52", "SA0007879220", "SA124060V8H1", "JO1103311014", "SA000A0MJ2J4",
    "SA130G50IOH8", "EGS65591C017", "SA000A0MR898", "SA0007879824", "AEE000901018",
    "SA12RGH0KAH5", "JO3100411011", "SA122GF0IT17", "SA0007879600", "OM0000004735",
    "AEM000601017", "SA13I051EUH6", "TN0003900107", "KW0EQ0602015", "MA0000012395",
    "SA0007879204", "SA000A0MSX40", "SA14LG523U13", "MA0000011793", "OM0000005963",
    "SA11T053VG15", "OM0000003224", "SA1430IHULH1", "SA13IG50SE12", "SA0007879642",
    "TN0007610017", "SA12GGDGIUH9", "SA15QG71VP17", "SA1520CJGGH7", "TN0007400013",
    "TN0007530017", "QA0007227745", "EGS655L1C012", "TN0001900604", "SA0007879592",
    "TN0007670011", "OM0000001400", "SA14E0523PL6", "SA0007879386", "SA14TGQHV9H8",
    "EGS729J1C018", "TN0003100609", "SA12CG541714", "TN0002600955", "SA0007879618",
    "SA14T12HF015", "QA000A1C6VZ0", "SA0007870096", "SA0007879394", "SA0007870088",
    "SA1563RGSK16", "QA0006929762", "SA000A0MSQ64", "EGS65541C012", "SA14TGAI1FH7",
    "SA0007879352", "KW0EQ0202832", "SA14HG523SL1", "SA12HG541R18", "TN0006560015",
    "EGS65571C019", "SA000A0SR838", "SA14BG523N54", "SA0007879576", "SA14TG92TU17",
    "SA0007879675", "TN0002400505", "SA12CG541219", "SA153H820MH5", "KW0EQ0401764",
    "SA14BG523NL8", "QA000A0KD6N7", "TN0006060016", "SA15DG52TUH8", "SA0007879253",
    "OM0000002168", "AEI000301012", "SA0007879667", "TN0007410012", "TN0003600350",
    "QA000A0KD6Q0", "SA14I0523T54", "AES000101015", "TN0007300015", "TN0007270010",
    "TN0007200017", "TN0007550015", "TN0007720014", "TN0007830011", "TN0002100907",
    "TNDKJ8O68X14", "TN0004200853", "TNQPQXRODTH8", "TN0003200755", "TN0007380017",
    "TN0007630015", "TN0004700100", "TN0001000108", "TN0007570013", "TN0006440010",
    "TN0007440019", "TN0006590012", "TN0007680010", "TN0006780019"
]
response  = symbol_conversion.Definition(symbols,
                                                   from_symbol_type=symbol_conversion.SymbolTypes.ISIN).get_data()

df = response.data.df

ric_column = df['RIC']

# Format each value with brackets and join them with commas
formatted_values = ', '.join([f'"{val}"' for val in ric_column])

# Display the formatted result
print(formatted_values)

rd.close_session()